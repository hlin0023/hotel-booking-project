{"ast":null,"code":"var _jsxFileName = \"/Users/lin/Desktop/Bookingsystem/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { format, addDays } from 'date-fns';\nimport RoomDashboard from './components/RoomDashboard';\nimport BookingForm from './components/BookingForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize rooms with proper numbering\n  const initialRooms = [{\n    roomNumber: 101,\n    roomType: 'single',\n    bookings: []\n  }, {\n    roomNumber: 102,\n    roomType: 'single',\n    bookings: []\n  }, {\n    roomNumber: 103,\n    roomType: 'single',\n    bookings: []\n  }, {\n    roomNumber: 104,\n    roomType: 'single',\n    bookings: []\n  }, {\n    roomNumber: 105,\n    roomType: 'single',\n    bookings: []\n  }, {\n    roomNumber: 106,\n    roomType: 'single',\n    bookings: []\n  }, {\n    roomNumber: 107,\n    roomType: 'single',\n    bookings: []\n  }, {\n    roomNumber: 201,\n    roomType: 'double',\n    bookings: []\n  }, {\n    roomNumber: 202,\n    roomType: 'double',\n    bookings: []\n  }, {\n    roomNumber: 203,\n    roomType: 'double',\n    bookings: []\n  }];\n  const [rooms, setRooms] = useState(initialRooms);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  // Improved availability calculation with date range checking\n  const calculateAvailability = (checkIn, checkOut) => {\n    const isRoomBooked = room => {\n      return room.bookings.some(booking => {\n        const bookingStart = new Date(booking.checkIn);\n        const bookingEnd = new Date(booking.checkOut);\n        const requestedStart = new Date(checkIn);\n        const requestedEnd = new Date(checkOut);\n        return requestedStart >= bookingStart && requestedStart < bookingEnd || requestedEnd > bookingStart && requestedEnd <= bookingEnd || requestedStart <= bookingStart && requestedEnd >= bookingEnd;\n      });\n    };\n    const singleRooms = rooms.filter(r => r.roomType === 'single');\n    const doubleRooms = rooms.filter(r => r.roomType === 'double');\n    return {\n      single: {\n        total: singleRooms.length,\n        booked: singleRooms.filter(r => isRoomBooked(r, checkIn, checkOut)).length,\n        vacant: singleRooms.length - singleRooms.filter(r => isRoomBooked(r, checkIn, checkOut)).length,\n        rooms: singleRooms.map(r => ({\n          number: r.roomNumber,\n          isBooked: isRoomBooked(r, checkIn, checkOut)\n        }))\n      },\n      double: {\n        total: doubleRooms.length,\n        booked: doubleRooms.filter(r => isRoomBooked(r, checkIn, checkOut)).length,\n        vacant: doubleRooms.length - doubleRooms.filter(r => isRoomBooked(r, checkIn, checkOut)).length,\n        rooms: doubleRooms.map(r => ({\n          number: r.roomNumber,\n          isBooked: isRoomBooked(r, checkIn, checkOut)\n        }))\n      }\n    };\n  };\n  const handleNewBooking = bookingData => {\n    const {\n      roomNumber,\n      checkIn,\n      checkOut,\n      guestName,\n      guestEmail\n    } = bookingData;\n    const updatedRooms = rooms.map(room => room.roomNumber === roomNumber ? {\n      ...room,\n      bookings: [...room.bookings, {\n        checkIn,\n        checkOut,\n        guestName,\n        guestEmail\n      }]\n    } : room);\n    setRooms(updatedRooms);\n    return {\n      success: true,\n      message: `Booking successful for Room ${roomNumber}!`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hotel Reservation System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Manage bookings and check room availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(RoomDashboard, {\n        availability: calculateAvailability(selectedDate, selectedDate),\n        selectedDate: selectedDate,\n        onDateChange: setSelectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BookingForm, {\n        onBookRoom: handleNewBooking,\n        calculateAvailability: calculateAvailability\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yHuKVGO+WLMdR95hOSoNT22QJpM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","format","addDays","RoomDashboard","BookingForm","jsxDEV","_jsxDEV","App","_s","initialRooms","roomNumber","roomType","bookings","rooms","setRooms","selectedDate","setSelectedDate","Date","calculateAvailability","checkIn","checkOut","isRoomBooked","room","some","booking","bookingStart","bookingEnd","requestedStart","requestedEnd","singleRooms","filter","r","doubleRooms","single","total","length","booked","vacant","map","number","isBooked","double","handleNewBooking","bookingData","guestName","guestEmail","updatedRooms","success","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","availability","onDateChange","onBookRoom","_c","$RefreshReg$"],"sources":["/Users/lin/Desktop/Bookingsystem/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { format, addDays } from 'date-fns';\nimport RoomDashboard from './components/RoomDashboard';\nimport BookingForm from './components/BookingForm';\nimport './App.css';\n\nfunction App() {\n  // Initialize rooms with proper numbering\n  const initialRooms = [\n    { roomNumber: 101, roomType: 'single', bookings: [] },\n    { roomNumber: 102, roomType: 'single', bookings: [] },\n    { roomNumber: 103, roomType: 'single', bookings: [] },\n    { roomNumber: 104, roomType: 'single', bookings: [] },\n    { roomNumber: 105, roomType: 'single', bookings: [] },\n    { roomNumber: 106, roomType: 'single', bookings: [] },\n    { roomNumber: 107, roomType: 'single', bookings: [] },\n    { roomNumber: 201, roomType: 'double', bookings: [] },\n    { roomNumber: 202, roomType: 'double', bookings: [] },\n    { roomNumber: 203, roomType: 'double', bookings: [] }\n  ];\n\n  const [rooms, setRooms] = useState(initialRooms);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  // Improved availability calculation with date range checking\n  const calculateAvailability = (checkIn, checkOut) => {\n    const isRoomBooked = (room) => {\n      return room.bookings.some(booking => {\n        const bookingStart = new Date(booking.checkIn);\n        const bookingEnd = new Date(booking.checkOut);\n        const requestedStart = new Date(checkIn);\n        const requestedEnd = new Date(checkOut);\n        \n        return (\n          (requestedStart >= bookingStart && requestedStart < bookingEnd) ||\n          (requestedEnd > bookingStart && requestedEnd <= bookingEnd) ||\n          (requestedStart <= bookingStart && requestedEnd >= bookingEnd)\n        );\n      });\n    };\n\n    const singleRooms = rooms.filter(r => r.roomType === 'single');\n    const doubleRooms = rooms.filter(r => r.roomType === 'double');\n\n    return {\n      single: {\n        total: singleRooms.length,\n        booked: singleRooms.filter(r => isRoomBooked(r, checkIn, checkOut)).length,\n        vacant: singleRooms.length - singleRooms.filter(r => isRoomBooked(r, checkIn, checkOut)).length,\n        rooms: singleRooms.map(r => ({\n          number: r.roomNumber,\n          isBooked: isRoomBooked(r, checkIn, checkOut)\n        }))\n      },\n      double: {\n        total: doubleRooms.length,\n        booked: doubleRooms.filter(r => isRoomBooked(r, checkIn, checkOut)).length,\n        vacant: doubleRooms.length - doubleRooms.filter(r => isRoomBooked(r, checkIn, checkOut)).length,\n        rooms: doubleRooms.map(r => ({\n          number: r.roomNumber,\n          isBooked: isRoomBooked(r, checkIn, checkOut)\n        }))\n      }\n    };\n  };\n\n  const handleNewBooking = (bookingData) => {\n    const { roomNumber, checkIn, checkOut, guestName, guestEmail } = bookingData;\n    \n    const updatedRooms = rooms.map(room => \n      room.roomNumber === roomNumber\n        ? {\n            ...room,\n            bookings: [\n              ...room.bookings,\n              { checkIn, checkOut, guestName, guestEmail }\n            ]\n          }\n        : room\n    );\n\n    setRooms(updatedRooms);\n    return { \n      success: true, \n      message: `Booking successful for Room ${roomNumber}!` \n    };\n  };\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Hotel Reservation System</h1>\n        <p>Manage bookings and check room availability</p>\n      </header>\n      \n      <main>\n        <RoomDashboard \n          availability={calculateAvailability(selectedDate, selectedDate)} \n          selectedDate={selectedDate}\n          onDateChange={setSelectedDate}\n        />\n        <BookingForm \n          onBookRoom={handleNewBooking}\n          calculateAvailability={calculateAvailability}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}